<?xml version="1.0" encoding="UTF-8" ?>

<project name="build" default="Standalone AS3">

    <property file="build.properties"/>

    <taskdef resource="net/sf/antcontrib/antlib.xml" >
        <classpath>
            <pathelement location="${ANT_CONTRIB}"/>
        </classpath>
    </taskdef>

    <!-- ////////////////////////////////////////////// -->
    <!-- ////////////////////////////////////////////// -->

    <property name="haxe.exe"       value="${SDK_HOME}/haxe.exe"/>
    <property name="haxelib.exe"    value="${SDK_HOME}/haxelib.exe"/>

    <property name="target.as3"     value="as3" />
    <property name="target.js"      value="js" />

    <property name="settings.haxe.hxml.current"     value="build.hxml"/>
    <property name="settings.haxe.munit.current"    value=".munit"/>

    <!-- ////////////////////////////////////////////// -->

    <property name="directory.output.unit"          value="${DIR_BINARY}/unit" />
    <property name="directory.output.standalone"    value="${DIR_BINARY}/standalone" />

    <property name="settings.flash.version"         value="-swf-version 11"/>
    <property name="settings.flash.debug"           value="-debug,-D fdb"/>

    <property name="settings.js.debug"              value="-debug"/>

    <!-- ////////////////////////////////////////////// -->
    <!-- ////////////////////////////////////////////// -->

    <!--standalone-->
    <target name="Standalone AS3" description="compiles and runs standalone">
        <generateTarget main="${MAINCLASS_PROJECT}" output="${directory.output.standalone}" target="${target.as3}" />
        <compileHXML />
    </target>

    <!--unit-->
    <target name="Unit AS3" description="compiles and runs unit test">
        <generateTarget main="${MAINCLASS_UNIT}" output="${directory.output.unit}" target="${target.as3}" />
        <unitReport target="${target.as3}" />
    </target>

    <!-- ////////////////////////////////////////////// -->

    <!--unit-->
    <macrodef name="unitReport" description="runs munit and creates test report">

        <attribute name="hxml" default="${settings.haxe.hxml.current}" />
        <attribute name="target" />

        <sequential>
            <echo message="Unit Report"/>

            <generateMUnit />

            <exec executable="${haxelib.exe}">
                <arg line='run munit config -file ${settings.haxe.munit.current}'/>
            </exec>

            <exec executable="${haxelib.exe}">
                <arg line='run munit test -@{target} -kill-browser'/>
            </exec>
        </sequential>
    </macrodef>

    <!-- ////////////////////////////////////////////// -->
    <!-- ////////////////////////////////////////////// -->

    <!--generate target hxml-->
    <macrodef name="generateTarget" description="generates target hxml">

        <attribute name="target" />
        <attribute name="output" />
        <attribute name="main" />
        <attribute name="hxml" default="${settings.haxe.hxml.current}" />

        <sequential>
            <echo message="generate hxml for: @{target}"/>

            <if>
                <equals arg1="@{target}" arg2="${target.as3}" />
                <then>
                    <generateHXML main="@{main}" output="-swf @{output}.swf" extra="${settings.flash.version},${settings.flash.debug}" />
                </then>
                <elseif>
                    <equals arg1="@{target}" arg2="${target.js}" />
                    <then>
                        <generateHXML main="@{main}" output="-js @{output}.js" extra="${settings.js.debug}" />
                    </then>
                </elseif>
                <else>
                    <fail message="Compile Target @{target} is not supported" />
                </else>
            </if>
        </sequential>
    </macrodef>

    <!-- ////////////////////////////////////////////// -->
    <!-- ////////////////////////////////////////////// -->

    <macrodef name="generateMUnit" description="generates .munit config">

        <attribute name="munit" default="${settings.haxe.munit.current}" />
        <attribute name="hxml" default="${settings.haxe.hxml.current}" />

        <sequential>
            <delete file="@{munit}" />
            <touch file="@{munit}" />

            <echo file="@{munit}" append="true" message="&#xa;version=2.1.0" />
            <echo file="@{munit}" append="true" message="&#xa;src=${SOURCE_UNIT}" />
            <echo file="@{munit}" append="true" message="&#xa;bin=${DIR_BINARY}" />
            <echo file="@{munit}" append="true" message="&#xa;report=${DIR_REPORT}" />
            <echo file="@{munit}" append="true" message="&#xa;resources=${DIR_RESOURCES}" />
            <echo file="@{munit}" append="true" message="&#xa;classPaths=${SOURCE_PROJECT}" />
            <echo file="@{munit}" append="true" message="&#xa;hxml=@{hxml}" />
        </sequential>

    </macrodef>

    <!--generate-->
    <macrodef name="generateHXML" description="generates HXML for target compilation">

        <attribute name="hxml"   default="${settings.haxe.hxml.current}" />
        <attribute name="main" />
        <attribute name="output" />
        <attribute name="extra" />

        <sequential>
            <delete file="@{hxml}" />
            <touch file="@{hxml}" />

            <for param="libs" list="${LIBRARIES}">
                <sequential>
                    <echo file="@{hxml}" append="true" message="&#xa;-lib @{libs}"/>
                </sequential>
            </for>

            <for param="srcs" list="${SOURCE_PROJECT}">
                <sequential>
                    <echo file="@{hxml}" append="true" message="&#xa;-cp @{srcs}"/>
                </sequential>
            </for>

            <for param="arg" list="-main @{main},@{output},@{extra}">
                <sequential>
                    <echo file="@{hxml}" append="true" message="&#xa;@{arg}"/>
                </sequential>
            </for>

            <for param="flags" list="${COMPILER_FLAGS}">
                <sequential>
                    <echo file="@{hxml}" append="true" message="&#xa;-D @{flags}"/>
                </sequential>
            </for>

        </sequential>

    </macrodef>

    <!--compile-->
    <macrodef name="compileHXML">
        <attribute name="hxml" default="${settings.haxe.hxml.current}" />
        <sequential>
            <exec executable="${haxe.exe}">
                <arg line='@{hxml}'/>
            </exec>
        </sequential>
    </macrodef>

</project>